앞의 "코드분석1 - 한글처리 알고리즘" 에서 언급한 Trie에 대해 먼저 알아보고 가도록 하자.
(트리 아님. 트라이 임) 
Trie(트라이)는 자료구조의 한 종류로써 빠른 단어 검색에 용이하다.

만약 단어를 저장할때, 배열을 쓴다고 하자. 그러면
0: god
1: created
2: space
3: genesis
4: noooooo
5: 
6: 
.
.
.
이런식으로 저장이 될것이다. 이렇게 배열에 쌓아두고 찾으려면 간단하게 처음부터 찾는다고 하면 time-complexity는 worst case에서 linear한 O(n)이 된다. 

심지어 같은 알파벳묶음을 가진 단어들이 한 배열에 저장되어있다면 공간의 낭비가 심각해진다.
0: genesis
1: genesis!
2: genesis???
3: genesis;
4: genesis!!!!!!!
5:
6:
....
따라서 단어를 저장하는데 배열을 사용하는 것은 빠르지도, 공간도 많이 잡아먹는 자료구조가 될 것 이다.

이를 해결하는 것이 '트라이' 이다. 트라이 또한 트리의 일종이라고 볼 수 있는데,







미완성임 수정하겠음
