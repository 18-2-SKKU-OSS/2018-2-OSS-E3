1 : 한글처리 알고리즘

-> 한국어 처리를 위해서 가장 처음에 해야할 일은 음절 글자를 음소단위로 쪼개는 일일 것입니다. Trie를 쓰기 위해서 자소 단위로 쪼개기로 함.

-> 유니코드를 사용하여 초성 중성 종성을 분리함.

 -> 
ㄱ~ㅎ, ㅏ~ㅣ 까지의 모든 자소 글자를 1~51까지의 코드에 대응시킴. 

해당 코드 : 
https://github.com/18-2-SKKU-OSS/2018-2-OSS-E3/blob/b3706d885467faa964fa7b591bc95ca381240b25/ModelGenerator/utils.py
61번줄

2 : 한국어 형태소 매칭을 위한 Trie 구조로 데이터를 담을 구조체 KTrie

struct KTrie
{
#ifdef  _DEBUG
    static int rootID;
    int id;
#endif //  _DEBUG
 
    KTrie* next[51] = {nullptr,};
    KTrie* fail = nullptr;
    KTrie* exit = nullptr;
    int depth;
    KTrie(int depth = 0);
    ~KTrie();
    void build(const char* str);
    KTrie* findFail(char i) const;
    void fillFail();
    vector<pair<int, int>> searchAllPatterns(const vector<char>& str) const;
};
